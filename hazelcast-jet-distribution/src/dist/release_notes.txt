In this Release Notes document, you will find the new features and fixes of the
Hazelcast Jet release. The numbers in the square brackets refer to the issue number
in Hazelcast Jet GitHub repository. You can reach to the full descriptions of the
issues at https://github.com/hazelcast/hazelcast-jet/issues/<issue number>.

The label in the brackets refer to the respective module.

** Hazelcast Jet 0.5 **

1. New Features

[core] New Pipeline API with support for group by, hash join and co group [497]
[core] Event journal streaming source for Map and Cache [487]
[core] Improved Jet job lifecycle management including auto-restart [492]
[core] Support for in-memory snapshots and at-least and exactly-once processing [500]

2. Enhancements

[core] Add projection and predicate capability to map reader [490]
[core] Hazelcast version updated to 3.9 [474]
[core] InsertWatermarksProcessor will now log late events [551]
[core] Add preferred local parallelism to all the sources and sinks [552]
[core] Socket source now uses non-blocking IO [554]
[core] Add ProcessorMetaSupplier.complete() method to support global cleanup [571]
[java.util.stream] Support for creating a stream from any source [360]
[kafka] Add snapshotting support for Kafka reader [500]
[kafka] Add optional projection function to Kafka reader [534]
[kafka] Add ability to create own ProducerRecord instances for Kafka writer [588]

3. Fixes

[core] Fix NPE when releasing uninitialized ResourceStore  [478]
[core] Add cache manager in order not to require a dependency on javax.cache [485]
[core] JetClassLoader should not throw on findResource [549]
[core] Fix ignored charset in StreamSocketP [553]
[core] Suppress exception for flow control packet when member has already left cluster [556]
[core] Kafka source should throw when partition count < global parallelism [559]
[core] Traversers.traverseStream should close stream when exhausted [560]
[core] Add missing serializer for Session type [562]
[hdfs] Make sure proper global cleanup is performed on job cancellation [572]

4. Code Samples Improvements

* Overall module reorganization roughly divided to code samples using pipeline API and core API.
* Several examples migrated to use the new pipeline API
* New examples using hash join enrichment and co group
* New code samples illustrating the new event journal and fault tolerance features
* New code samples showing how to use HDFS with java.util.stream

